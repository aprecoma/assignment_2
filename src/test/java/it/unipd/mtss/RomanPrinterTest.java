package it.unipd.mtss;

import org.junit.Test;
import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertArrayEquals;

public class RomanPrinterTest {
    @Test
    public void emptyString() {
        assertEquals("", RomanPrinter.print(0));
    }

    @Test
    public void randomValidStrings() {
        int[] numbers = {2, 24, 136, 989, 1432, 4568};
        String[] expected = {"  _____   _____ \n |_   _| |_   _|\n   | |     | |  \n   | |     | |  \n  _| |_   _| |_ \n |_____| |_____|\n",
                            " __   __ __   __  _____  __      __\n \\ \\ / / \\ \\ / / |_   _| \\ \\    / /\n  \\ V /   \\ V /    | |    \\ \\  / / \n   > <     > <     | |     \\ \\/ /  \n  / . \\   / . \\   _| |_     \\  /   \n /_/ \\_\\ /_/ \\_\\ |_____|     \\/    \n",
                            "   _____  __   __ __   __ __   __ __      __  _____ \n  / ____| \\ \\ / / \\ \\ / / \\ \\ / / \\ \\    / / |_   _|\n | |       \\ V /   \\ V /   \\ V /   \\ \\  / /    | |  \n | |        > <     > <     > <     \\ \\/ /     | |  \n | |____   / . \\   / . \\   / . \\     \\  /     _| |_ \n  \\_____| /_/ \\_\\ /_/ \\_\\ /_/ \\_\\     \\/     |_____|\n",
                            "   _____   __  __   _       __   __ __   __ __   __  _____  __   __\n  / ____| |  \\/  | | |      \\ \\ / / \\ \\ / / \\ \\ / / |_   _| \\ \\ / /\n | |      | \\  / | | |       \\ V /   \\ V /   \\ V /    | |    \\ V / \n | |      | |\\/| | | |        > <     > <     > <     | |     > <  \n | |____  | |  | | | |____   / . \\   / . \\   / . \\   _| |_   / . \\ \n  \\_____| |_|  |_| |______| /_/ \\_\\ /_/ \\_\\ /_/ \\_\\ |_____| /_/ \\_\\\n",
                            "  __  __    _____   _____   __   __ __   __ __   __  _____   _____ \n |  \\/  |  / ____| |  __ \\  \\ \\ / / \\ \\ / / \\ \\ / / |_   _| |_   _|\n | \\  / | | |      | |  | |  \\ V /   \\ V /   \\ V /    | |     | |  \n | |\\/| | | |      | |  | |   > <     > <     > <     | |     | |  \n | |  | | | |____  | |__| |  / . \\   / . \\   / . \\   _| |_   _| |_ \n |_|  |_|  \\_____| |_____/  /_/ \\_\\ /_/ \\_\\ /_/ \\_\\ |_____| |_____|\n",
                            "  __  __   __  __   __  __   __  __   _____    _       __   __ __      __  _____   _____   _____ \n |  \\/  | |  \\/  | |  \\/  | |  \\/  | |  __ \\  | |      \\ \\ / / \\ \\    / / |_   _| |_   _| |_   _|\n | \\  / | | \\  / | | \\  / | | \\  / | | |  | | | |       \\ V /   \\ \\  / /    | |     | |     | |  \n | |\\/| | | |\\/| | | |\\/| | | |\\/| | | |  | | | |        > <     \\ \\/ /     | |     | |     | |  \n | |  | | | |  | | | |  | | | |  | | | |__| | | |____   / . \\     \\  /     _| |_   _| |_   _| |_ \n |_|  |_| |_|  |_| |_|  |_| |_|  |_| |_____/  |______| /_/ \\_\\     \\/     |_____| |_____| |_____|\n"};
        String[] actual = new String[expected.length];
        for (int i = 0; i < numbers.length; i++) {
            actual[i] = RomanPrinter.print(numbers[i]);
        }
        assertArrayEquals(expected, actual);
    }
}
